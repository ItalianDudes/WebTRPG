plugins {
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

// Versioning
def versionNumber = '0.0'
def versionType = 'DEV' // RELEASE | BETA | ALPHA | DEV
def versionMarker = versionType.charAt(0)
version = versionNumber+versionMarker

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// Dependencies
dependencies {
    implementation project(':core')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // implementation 'org.springframework.boot:spring-boot-starter-security' // Only when starting login-phase
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.github.wimdeblauwe:htmx-spring-boot-thymeleaf:4.0.1'
    implementation 'org.liquibase:liquibase-core'
    // implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // Only when starting login-phase
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // testImplementation 'org.springframework.security:spring-security-test' // Only when starting login-phase
}

// Build Configuration
jar {
    enabled = false
}
bootJar {
    manifest {
        attributes "Title" : "WebTRPG"
        attributes "Vendor" : "ItalianDudes"
        attributes "Version" : archiveVersion.get()
        attributes "Version-Number" : archiveVersion.get()
        attributes "Version-Type" : versionType
        attributes "Version-Marker" : versionMarker
        attributes "Timestamp" : new Date().format("dd/MM/yyyy HH:mm:ss.sss")
    }
    archiveFileName = getRootDir().getName() + "-" + archiveVersion.get() + ".jar"
}

// Dev Tasks
tasks.register('runServer') {
    dependsOn bootRun
    group = "Execution"
    description = "Build, assemble and run the web server"
}

// Deployment Tasks
tasks.register('deployJar') {
    dependsOn bootJar
    group = "Deployment"
    description = "Build, assemble and deploy the web server as a fat-jar"
}